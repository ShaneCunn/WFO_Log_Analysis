<Window x:Class="WFO_PROJECT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Anno="http://schemas.microsoft.com/expression/blend/extensions/annotations/2008"
        xmlns:Properties="clr-namespace:WFO_PROJECT.Properties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sparrow="http://sparrowtoolkit.codeplex.com/wpf"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Name="WFO_Grep_Tool"
        Title="ACR logging tool"
        Width="1135"
        Height="720"
        Background="#FFDEE7EF"
        Closed="WFO_Grep_Tool_Closed"
        Icon="Icon.ico"
        WindowStyle="ThreeDBorderWindow"
        mc:Ignorable="d Anno">
    <Grid Margin="0,0,0,2">
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>


        <!--  ********************** File menu grouping  **********************  -->
        <!--  Left Border label  -->
        <Border x:Name="Left_Border"
                Width="341"
                Margin="11,61,0,49"
                HorizontalAlignment="Left"
                BorderBrush="#FF4A494A"
                BorderThickness="2,35" />


        <!--  ********************** File menu grouping  **********************  -->
        <Menu Height="21"
              Margin="0"
              VerticalAlignment="Top">

            <!--  top menu background gradient  -->
            <Menu.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0.25" Color="#FFF6F6F6" />
                    <GradientStop Offset="0.25" Color="#FFEAE8E8" />
                    <GradientStop Offset="0.8" Color="#FFD9DADC" />
                    <GradientStop Offset="1" Color="#FFFFFCFC" />
                </LinearGradientBrush>
            </Menu.Background>

            <!--    -->

            <!--  File menu tab  -->
            <MenuItem x:Name="Btn_file_tab"
                      Header="File&#10;"
                      TabIndex="1">
                <!--  File menu Exit button that closes the program  -->
                <MenuItem x:Name="exitBtn"
                          Width="140"
                          HorizontalAlignment="Left"
                          Click="MenuItem_exitBtn"
                          Header="Exit"
                          ToolTip="Click Exit to close the application" />
            </MenuItem>

            <!--  Help menu Tab  -->
            <MenuItem Click="MenuItem_HelpButton"
                      Header="Help"
                      TabIndex="2">

                <!--  About button opens a about window  -->
                <MenuItem x:Name="AboutButton"
                          Click="MenuItem_AboutButton"
                          Header="About ACR Logging Tool" />

                <!--  Separator between About and Help menu buttons  -->
                <Separator Width="160" HorizontalAlignment="Left" />

                <!--  Help Button that opens a HTML help page  -->
                <MenuItem x:Name="HelpButton"
                          Width="160"
                          HorizontalAlignment="Left"
                          Click="MenuItem_HelpButton"
                          Header="View Help" />

            </MenuItem>
        </Menu>


        <!--  Select log label  -->
        <Label x:Name="Select_Log_Label"
               Margin="20,62,0,0"
               HorizontalAlignment="Left"
               VerticalAlignment="Top"
               BorderBrush="Black"
               Content="Select Log File"
               FontWeight="Bold"
               Foreground="#FFF3F1F1" />

        <!--  Groupbox for file input and output  -->
        <GroupBox x:Name="SourceFileGroupbox"
                  Width="325"
                  Height="126"
                  Margin="19,105,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Header="Source &amp; Output" />

        <!--  Choose output folder Label Box  -->
        <Label Height="26"
               Margin="33,118,0,0"
               HorizontalAlignment="Left"
               VerticalAlignment="Top"
               Content="Source Log file:"
               RenderTransformOrigin="-0.237,0.308"
               ToolTip="Source of the Log File, Please click the Choose File button." />

        <!--  Source file label for source file  -->
        <TextBox x:Name="FileLabel"
                 Width="202"
                 Height="23"
                 Margin="33,146,0,0"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 IsEnabled="False"
                 IsReadOnly="True"
                 Text="Select log file "
                 TextWrapping="Wrap" />

        <!--  Choose File button that opens a Open File Dialog Box  -->
        <Button x:Name="ChooseFileButton"
                Width="95"
                Height="23"
                Margin="240,145,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Click="ChooseFileButton_Click"
                Content="Choose File"
                Cursor="Hand"
                FontWeight="Bold"
                RenderTransformOrigin="7,2.091"
                TabIndex="4"
                ToolTip="Select directory location of log file to parse">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#ffffff" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#636363" />
                                <GradientStop Offset="1" Color="#FF000003" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">

                                <!--  Sets button corner radius from square to 3px radius  -->
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="#c5c5c5"
                                        BorderThickness="1"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Change mouseover to an orange gradient  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#464646" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--  Choose output folder button that open a Save File Dialog Box  -->
        <Button x:Name="ChooseOutputFolderButton"
                Width="95"
                Height="23"
                Margin="239,193,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Click="ChooseOutputFolderButton_Click"
                Content="Choose Output"
                Cursor="Hand"
                FontWeight="Bold"
                RenderTransformOrigin="1.231,0.273"
                TabIndex="5"
                ToolTip="Select/Create output directory to output the parsed log file">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#ffffff" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#636363" />
                                <GradientStop Offset="1" Color="#FF000003" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">

                                <!--  Sets button corner radius from square to 3px radius  -->
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="#c5c5c5"
                                        BorderThickness="1"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Change mouseover to an orange gradient  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#464646" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--  Source File Label  -->
        <Label x:Name="Output_Label"
               Height="26"
               Margin="34,169,0,0"
               HorizontalAlignment="Left"
               VerticalAlignment="Top"
               Content="Output Folder:"
               ToolTip="Folder where the parsed log file will be generated" />


        <!--  Output file label for output folder  -->
        <TextBox x:Name="OutputLabel"
                 Width="202"
                 Height="23"
                 Margin="32,193,0,0"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 IsEnabled="False"
                 IsReadOnly="True"
                 Text="Select output folder"
                 TextWrapping="Wrap" />

        <!--  Extra options button opens DatepickerWindow that allow to choose a date range and exclude string options  -->
        <Button x:Name="ExtraOptionsButton"
                Width="146"
                Height="25"
                Margin="20,245,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Click="ExtraOptionsButton_Click"
                Content="Extra Options"
                FontWeight="Bold"
                RenderTransformOrigin="0.333,-0.318"
                TabIndex="6"
                ToolTip="Options such as Date Range &amp; Exclude Group">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#ffffff" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#636363" />
                                <GradientStop Offset="1" Color="#FF000003" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">

                                <!--  Sets button corner radius from square to 3px radius  -->
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="#c5c5c5"
                                        BorderThickness="1"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Change mouseover to an orange gradient  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#464646" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>



        <DataGrid x:Name="GroupDataGrid"
                  Width="341"
                  Margin="11,326,0,79"
                  HorizontalAlignment="Left"
                  HorizontalContentAlignment="Stretch"
                  AlternatingRowBackground="White"
                  AlternationCount="2"
                  AutoGenerateColumns="False"
                  Background="#FFF0F0F0"
                  BorderBrush="#FF4A494A"
                  BorderThickness="2"
                  CanUserAddRows="False"
                  ColumnWidth="*"
                  Loaded="GroupDataGrid_Loaded"
                  PreviewKeyDown="GroupDataGrid_PreviewKeyDown"
                  RowBackground="#FFF7F7FF"
                  SelectionChanged="GroupDataGrid_SelectionChanged"
                  ToolTip="Please select a Script to Run">
            <DataGrid.Columns>
                <DataGridTemplateColumn CanUserReorder="False"
                                        CanUserSort="True"
                                        ClipboardContentBinding="{x:Null}">
                    <DataGridTemplateColumn.Header>
                        <CheckBox x:Name="listcheckboxheader"
                                  Checked="listcheckboxheader_Checked"
                                  Unchecked="listcheckboxheader_Unchecked" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox x:Name="listcheckbox"
                                      HorizontalAlignment="Center"
                                      IsChecked="{Binding gridCheckboxColumn,
                                                          BindingGroupName=comboBox,
                                                          UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding gridNameColumn}" Header="MyString" />
            </DataGrid.Columns>
        </DataGrid>

        <!--  Run Button  -->
        <Button x:Name="Run_Button"
                Width="56"
                Height="23"
                Margin="18,0,0,54"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                BorderThickness="1"
                Click="Run_Button_Click"
                Content="Run"
                Cursor="Hand"
                FontWeight="Bold"
                RenderTransformOrigin="0,0.5"
                TabIndex="7"
                ToolTip="Click Run to parse a log file">
            <!--  Adds a style override, change the background colours and mouseover colours to a orange theme  -->
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FFECB14D" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <!--  Sets button corner radius from square to 3px radius  -->
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="#553213"
                                        BorderThickness="1"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <!--  Change mouseover to an orange gradient  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#FFEFCE92" />
                                        <GradientStop Offset="0.5" Color="#F6C56E" />
                                        <GradientStop Offset="0.5" Color="#FFF7D089" />
                                        <GradientStop Offset="1" Color="#FFEDA529" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#FFEEEEEE" />
                            <Setter Property="Foreground" Value="#FF888888" />
                            <!--<Setter Property="BorderBrush" Value="Red"/>-->
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--  Stop button  -->
        <Button x:Name="BtnCancel"
                Grid.ColumnSpan="2"
                Width="50"
                Height="22.5"
                Margin="81.5,0,0,54"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Background="#FFDF5152"
                BorderBrush="#FFD74A4A"
                Click="StopButton_Click"
                Content="Stop"
                FontWeight="Bold"
                IsCancel="True"
                IsEnabled="False"
                RenderTransformOrigin="-0.16,0.412"
                TabIndex="8"
                ToolTip="Click Stop if you want to stop a Running Script" />

        <!--  Delete rules Button  -->
        <Button x:Name="DeleteScriptsButton"
                Grid.ColumnSpan="2"
                Height="23"
                Margin="139.5,0,0,54"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Click="DeleteScriptsButton_Click"
                Content="Delete Group"
                FontWeight="Bold"
                RenderTransformOrigin="0.5,0.5"
                TabIndex="10"
                ToolTip="Please tick the tick box on the group you want to be deleted and then click Delete Group">
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFF3F3F3" />
                    <GradientStop Offset="0.5" Color="#FFDDDDDD" />
                    <GradientStop Offset="0.428" Color="#FFDDDDDD" />
                    <GradientStop Offset="1" Color="#FFCDCDCD" />
                </LinearGradientBrush>
            </Button.Background>
        </Button>

        <!--  Copy to new Rules button  -->
        <Button x:Name="CopyToNewRules"
                Grid.ColumnSpan="2"
                Height="23"
                Margin="227.5,0,0,54"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Click="CopyToNewScript_Click"
                Content="Copy to new Group"
                FontWeight="Bold"
                RenderTransformOrigin="0.5,0.5"
                TabIndex="10">
            <Button.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFF3F3F3" />
                    <GradientStop Offset="0.5" Color="#FFDDDDDD" />
                    <GradientStop Offset="0.428" Color="#FFDDDDDD" />
                    <GradientStop Offset="1" Color="#FFCDCDCD" />
                </LinearGradientBrush>
            </Button.Background>
        </Button>

        <!--  Progress label  -->
        <Label x:Name="Progress_label"
               Width="60"
               Margin="10,0,0,5"
               HorizontalAlignment="Left"
               VerticalAlignment="Bottom"
               Content="Progress"
               FontWeight="Bold"
               Foreground="#FFF3F1F1"
               RenderTransformOrigin="0.5,2.308"
               ToolTip="Select how many lines above the search you wish to parse"
               Visibility="Hidden" />

        <!--  animated progress bar  -->
        <ProgressBar x:Name="progressBar"
                     Width="172"
                     Height="20"
                     Margin="69,0,0,7"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Bottom"
                     Foreground="Green"
                     IsIndeterminate="True"
                     Maximum="100"
                     Visibility="Hidden" />

        <!--  current lines  label  -->
        <Label x:Name="Top_Right_Label"
               Grid.ColumnSpan="2"
               Margin="371,63,0,0"
               HorizontalAlignment="Left"
               VerticalAlignment="Top"
               Content="Current Lines"
               FontWeight="Bold"
               Foreground="#FFF3F1F1" />

        <TabControl Margin="1,21,0,0"
                    Panel.ZIndex="-1"
                    BorderBrush="#FF4A494A"
                    BorderThickness="1,1,1,35">
            <TabControl.Background>
                <ImageBrush />
            </TabControl.Background>


            <!--  Home Tab  -->
            <TabItem x:Name="Home_Tab"
                     Width="50"
                     Height="22.96"
                     Margin="8,0,-10,0"
                     VerticalAlignment="Bottom"
                     Header="Home"
                     TabIndex="3">
                <TabItem.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FFF3F3F3" />
                        <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                        <GradientStop Offset="0.5" Color="#FFDDDDDD" />
                        <GradientStop Offset="0.996" Color="#FFCDCDCD" />
                    </LinearGradientBrush>
                </TabItem.Background>
                <Grid Margin="0,-1.965,6,6" Background="#FFDEE7EF">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0*" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Anno:AnnotationManager.Annotations>

                        <Anno:Annotation Author="Shane Cunningham"
                                         AuthorInitials="SC"
                                         Left="935"
                                         SerialNumber="1"
                                         Timestamp="04/29/2015 16:44:28"
                                         Top="73.995" />
                    </Anno:AnnotationManager.Annotations>




                    <Grid Grid.ColumnSpan="2" Margin="351,10,3,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40*" />
                            <RowDefinition Height="541*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>


                        <!--  Border right for edit a line in the current script  -->
                        <Border x:Name="Border_Right"
                                Grid.RowSpan="2"
                                Margin="0,2,0,0"
                                Background="#FFDEE7EF"
                                BorderBrush="#FF4A494A"
                                BorderThickness="2,33">
                            <Border Height="33"
                                    Margin="-2,0,-2,92"
                                    VerticalAlignment="Bottom"
                                    Background="#FF4A494A"
                                    BorderBrush="#FF4A494A"
                                    BorderThickness="1" />
                        </Border>

                        <!--  Groupbox for editor  -->
                        <GroupBox x:Name="ScriptName_Editor"
                                  Grid.Row="1"
                                  Width="511"
                                  Height="70"
                                  Margin="17,0,0,44"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Bottom"
                                  Header="Editor" />

                        <Label x:Name="Script_edit_label"
                               Grid.Row="1"
                               Width="132"
                               Margin="35,0,0,66"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Bottom"
                               Background="{x:Null}"
                               Content="Current Group name :" />

                        <!--  Paste Button will paste into a different set of rule that selected  -->
                        <Button x:Name="pasteButton"
                                Grid.Row="1"
                                Width="56"
                                Height="23"
                                Margin="17,0,0,130"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Click="pasteButton_Click"
                                Content="Paste"
                                FontWeight="Bold"
                                IsEnabled="False"
                                RenderTransformOrigin="-0.711,0.609"
                                TabIndex="11" />

                        <!--  Copy lines button one or more lines in current lines to a new set of rules  -->
                        <Button x:Name="copyMultipleLinesButton"
                                Grid.Row="1"
                                Width="56"
                                Height="23"
                                Margin="81,0,0,130"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Click="copyMultipleLinesButton_Click"
                                Content="Copy"
                                FontWeight="Bold"
                                RenderTransformOrigin="0.161,0.565"
                                TabIndex="12"
                                ToolTip="Tick the lines you want to copy" />

                        <!--  Delete Button will delete one or more lines in current lines  -->
                        <Button x:Name="deleteMultipleLinesButton"
                                Grid.Row="1"
                                Width="56"
                                Height="23"
                                Margin="147,0,0,130"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Panel.ZIndex="99999"
                                Click="deleteMultipleLinesButton_Click"
                                Content="Delete"
                                FontWeight="Bold"
                                RenderTransformOrigin="0.696,0.174"
                                TabIndex="13"
                                ToolTip="Tick the lines you want to Delete">
                            <Button.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FFF3F3F3" />
                                    <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                    <GradientStop Offset="0.5" Color="#FFDDDDDD" />
                                    <GradientStop Offset="1" Color="#FFCDCDCD" />
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>
                    </Grid>

                    <DataGrid x:Name="LineDataGrid"
                              Grid.ColumnSpan="2"
                              Margin="351,43,3,164"
                              HorizontalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch"
                              Panel.ZIndex="1"
                              AlternatingRowBackground="White"
                              AlternationCount="2"
                              AutoGenerateColumns="False"
                              Background="#FFF0F0F0"
                              BorderBrush="#FF4A494A"
                              BorderThickness="2"
                              CanUserAddRows="False"
                              ColumnWidth="*"
                              IsReadOnly="True"
                              RowBackground="#FFF7F7FF"
                              SelectedIndex="0"
                              ToolTip="Please select a Script to Edit">

                        <!--  Datagrid Columns  -->
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="24"
                                                    CanUserReorder="False"
                                                    CanUserSort="True"
                                                    ClipboardContentBinding="{x:Null}"
                                                    Visibility="Hidden">
                                <DataGridTemplateColumn.Header>
                                    <CheckBox x:Name="datacheckboxheader"
                                              Checked="datacheckboxheader_Checked"
                                              Unchecked="datacheckboxheader_Unchecked" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="datagridcheckbox"
                                                  HorizontalAlignment="Center"
                                                  IsChecked="{Binding gridCheckbox,
                                                                      BindingGroupName=gridCheckAllBox,
                                                                      UpdateSourceTrigger=PropertyChanged}" />

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!--  Column String,  to rename the column Name edit EditDataGrid.Columns[1].Header in the mainwindow.xaml.cs  -->
                            <DataGridTextColumn Width="*"
                                                Binding="{Binding searchString}"
                                                Header="String"
                                                ToolTipService.ToolTip="Search string to parse"
                                                Visibility="Hidden">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>

                            <!--  Column From,  to rename the column Name edit EditDataGrid.Columns[2].Header in the mainwindow.xaml.cs  -->
                            <DataGridTemplateColumn Width="*"
                                                    CanUserReorder="True"
                                                    CanUserSort="True"
                                                    ClipboardContentBinding="{x:Null}"
                                                    Header="From"
                                                    ToolTipService.ToolTip="From System component"
                                                    Visibility="Hidden">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox x:Name="from2"
                                                  Background="White"
                                                  BorderBrush="DarkCyan"
                                                  IsReadOnly="False"
                                                  ItemsSource="{Binding fromCollection}"
                                                  SelectedValue="{Binding selectionFrom,
                                                                          Mode=TwoWay,
                                                                          UpdateSourceTrigger=PropertyChanged}"
                                                  ToolTip="test tip" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!--  Column To, to rename the column Name edit EditDataGrid.Columns[3].Header in the mainwindow.xaml.cs  -->
                            <DataGridTemplateColumn Width="*"
                                                    CanUserReorder="True"
                                                    CanUserSort="True"
                                                    ClipboardContentBinding="{x:Null}"
                                                    Header="To"
                                                    ToolTipService.ToolTip="To System component"
                                                    Visibility="Hidden">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox x:Name="to2"
                                                  Background="White"
                                                  BorderBrush="DarkCyan"
                                                  IsReadOnly="False"
                                                  ItemsSource="{Binding toCollection}"
                                                  SelectedItem="{Binding selectionTo,
                                                                         Mode=TwoWay,
                                                                         UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!--  Column XML, to rename the column Name edit EditDataGrid.Columns[4].Header in the mainwindow.xaml.cs  -->
                            <DataGridTemplateColumn Width="48"
                                                    CanUserReorder="True"
                                                    CanUserSort="True"
                                                    ClipboardContentBinding="{x:Null}"
                                                    Header="XML"
                                                    ToolTipService.ToolTip="XML Parsing"
                                                    Visibility="Hidden">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="xmlcheckbox"
                                                  HorizontalAlignment="Center"
                                                  IsChecked="{Binding xml,
                                                                      UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <!--  Column Top Marker, to rename the column Name edit EditDataGrid.Columns[5].Header in the mainwindow.xaml.cs  -->
                            <DataGridTextColumn x:Name="topMarker"
                                                Width="*"
                                                Binding="{Binding linesAbove}"
                                                Header="Top Marker"
                                                ToolTipService.ToolTip=""
                                                Visibility="Hidden">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>

                            <!--  Column Bottom Marker, to rename the column Name edit EditDataGrid.Columns[6].Header in the mainwindow.xaml.cs  -->
                            <DataGridTextColumn x:Name="bottomMarker"
                                                Width="*"
                                                Binding="{Binding linesBelow}"
                                                Header="Bottom Marker"
                                                ToolTipService.ToolTip="A short explanation of Column B"
                                                Visibility="Hidden">

                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>

                            <!--  Column Exclude, to rename the column Name edit EditDataGrid.Columns[7].Header in the mainwindow.xaml.cs  -->
                            <DataGridTemplateColumn Width="52"
                                                    CanUserReorder="False"
                                                    CanUserSort="True"
                                                    ClipboardContentBinding="{x:Null}"
                                                    Header="Exclude"
                                                    ToolTipService.ToolTip="Exclude this Search String"
                                                    Visibility="Hidden">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="datagridcheckbox"
                                                  HorizontalAlignment="Center"
                                                  IsChecked="{Binding exclude,
                                                                      UpdateSourceTrigger=PropertyChanged}" />

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                    </DataGrid>

                    <!--  Diagram options button opens EditForDiagramWindow  which allow to edit Diagram Options  -->
                    <Button x:Name="EditGraphOptionsButton"
                            Grid.ColumnSpan="2"
                            Width="113"
                            Height="23"
                            Margin="0,0,19,136"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Click="EditGraphOptionsButton_Click"
                            Content="Diagram Options"
                            Cursor="Hand"
                            FontWeight="Bold"
                            RenderTransformOrigin="1.147,-1.826"
                            TabIndex="19"
                            ToolTip="Click to edit choices for diagram">
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#FFF3F3F3" />
                                <GradientStop Offset="0.5" Color="#FFDDDDDD" />
                                <GradientStop Offset="0.428" Color="#FFDDDDDD" />
                                <GradientStop Offset="1" Color="#FFCDCDCD" />
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>

                    <!--  Select a rule name combobox  -->
                    <ComboBox x:Name="ScriptSelectCombo"
                              Grid.ColumnSpan="2"
                              Width="301"
                              Height="23"
                              Margin="543,0,0,107"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Bottom"
                              IsEditable="True"
                              IsEnabled="True"
                              IsReadOnly="True"
                              Loaded="ScriptSelectCombo_Loaded"
                              MaxDropDownHeight="200"
                              SelectionChanged="ScriptSelectCombo_SelectionChanged"
                              TabIndex="14"
                              ToolTip="Select a search script to edit"
                              Visibility="Hidden" />

                    <!--  Edit Rule name textbox  -->
                    <TextBox x:Name="editScriptNameTextbox"
                             Grid.ColumnSpan="2"
                             Width="301"
                             Height="22"
                             Margin="543,0,0,71"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Bottom"
                             IsEnabled="False"
                             TabIndex="15"
                             TextWrapping="Wrap"
                             ToolTip="Edit the name or rename the script here" />

                    <!--  Save button save line and rule names in the Right Data grid for Current lines and Editor  -->
                    <Button x:Name="Save"
                            Grid.ColumnSpan="2"
                            Width="57"
                            Height="23"
                            Margin="0,0,19,10"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Panel.ZIndex="10"
                            Click="Save_Click"
                            Content="Save"
                            Cursor="Hand"
                            FontWeight="Bold"
                            IsDefault="True"
                            RenderTransformOrigin="0.356,0.174"
                            TabIndex="19"
                            ToolTip="Click to save changes in current line">
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#FFF3F3F3" />
                                <GradientStop Offset="0.5" Color="#FFDDDDDD" />
                                <GradientStop Offset="0.428" Color="#FFDDDDDD" />
                                <GradientStop Offset="1" Color="#FFCDCDCD" />
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>



                </Grid>
            </TabItem>

        </TabControl>

        <Label x:Name="Bottom_right_helper_label"
               Width="258"
               Height="29"
               Margin="545,0,0,90"
               HorizontalAlignment="Left"
               VerticalAlignment="Bottom"
               Content="To edit a Group Name, change above and save."
               FontSize="11" />
        <!--  export script button opens a Save File Dialog Box  -->
        <Button x:Name="ExportButton"
                Width="146"
                Height="23"
                Margin="20,285,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Click="ExportButton_Click"
                Content="Export Group"
                FontWeight="Bold"
                RenderTransformOrigin="0.333,-0.318"
                TabIndex="6">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#ffffff" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#636363" />
                                <GradientStop Offset="1" Color="#FF000003" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">

                                <!--  Sets button corner radius from square to 3px radius  -->
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="#c5c5c5"
                                        BorderThickness="1"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Change mouseover to an orange gradient  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#464646" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <!--  Import Script button that opens a Open File Dialog Box  -->
        <Button x:Name="ImportButton"
                Width="146"
                Height="23"
                Margin="179,285,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Click="ImportButton_Click"
                Content="Import Group"
                FontWeight="Bold"
                RenderTransformOrigin="0.333,-0.318"
                TabIndex="6">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#ffffff" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#636363" />
                                <GradientStop Offset="1" Color="#FF000003" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">

                                <!--  Sets button corner radius from square to 3px radius  -->
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="#c5c5c5"
                                        BorderThickness="1"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Change mouseover to an orange gradient  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#464646" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="ScriptCreationButton"
                Width="146"
                Height="23"
                Margin="179,245,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Click="ScriptCreationButton_Click"
                Content="Create New Group"
                FontWeight="Bold"
                RenderTransformOrigin="0.333,-0.318"
                TabIndex="6"
                ToolTip="Click here to create a new Group">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#ffffff" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#636363" />
                                <GradientStop Offset="1" Color="#FF000003" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">

                                <!--  Sets button corner radius from square to 3px radius  -->
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="#c5c5c5"
                                        BorderThickness="1"
                                        CornerRadius="3">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Change mouseover to an orange gradient  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#464646" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>


        </Button>

        <!--  **********************  End of right side Grouping **********************  -->
    </Grid>
</Window>